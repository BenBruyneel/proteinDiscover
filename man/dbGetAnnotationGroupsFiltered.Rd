% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteinDatabase.R
\name{dbGetAnnotationGroupsFiltered}
\alias{dbGetAnnotationGroupsFiltered}
\title{Get Group Annotation information from the table: AnnotationProteinGroups.
 This can be done via the GroupAnnotationAccession or via the description of
 an annotation. When using the Description it's possible to use the SQL 
 'like'}
\usage{
dbGetAnnotationGroupsFiltered(
  db,
  columnNames = NA,
  GroupAnnotationAccession = NA,
  description = NA,
  UpperCase = FALSE,
  LowerCase = FALSE,
  like = FALSE,
  likePre = "\%",
  likePost = "\%",
  SQL = FALSE
)
}
\arguments{
\item{db}{database access 'handle'}

\item{columnNames}{allows the selection of columns to take from the table,
default = NA (all columns)}

\item{GroupAnnotationAccession}{identification of the annotation, usually
something like GO:....  (gene ontology) or pF.... (protein family). Note
that when this argument is not NAm the arguments dealing with description
etc are ignored}

\item{description}{character vector specifying a word or sequence of word
which is to be selected. If the 'like' argument is TRUE then it doesn't need
to be exactly the same as the GroupAnnotationDescription field/column (in
most cases the 'like' argument should be set to TRUE !)}

\item{UpperCase}{if set to TRUE then BOTH description and the
GroupAnnotationDescription field/column are entirely put to uppercase in the
SQL used for the query. Note that if both UpperCase and LowerCase are TRUE,
then UpperCase is used}

\item{LowerCase}{if set to TRUE then BOTH description and the
GroupAnnotationDescription field/column are entirely put to lowercase in the
SQL used for the query.}

\item{like}{if set to TRUE then the SQL 'LIKE' in stead of 'IN' is used to
query the data. This only applies when the argument 'discription' is used. 
This is ignored when 'GroupAnnotationAccession' is used. If like = TRUE,
then using eg 'locomotion' will result in the SQL query being: WHERE ...
 LIKE '%locomotion%' (the %'s are coming from likePro & likePost). The
 resulting table will give all rows, where the description part contains
 'locomotion'. If like = FALSE, then only rows where the description exactly
 matches 'locomotion' will be selected. It's also possible to use the '_'
 (underscore) to make the LIKE function more or less specific. See eg
 \href{https://www.w3schools.com/sql/sql_like.asp}{SQL LIKE Operator} for
 more info}

\item{likePre}{default is '%'. This character vector gets put in front of the
'description' argument to facilitate (partial) matching. It's better to set
to '' (empty string) when creating LIKE arguments directly via the
'description' argument}

\item{likePost}{default is '%'. This character vector gets added to the end
of the 'description' argument to facilitate (partial) matching. It's better
to set to '' (empty string) when creating LIKE arguments directly via the
'description' argument}

\item{SQL}{allows the function to return the SQL query statement in stead of
a data.frame}
}
\value{
a data.frame or a character vector (SQL)
}
\description{
Get Group Annotation information from the table: AnnotationProteinGroups.
 This can be done via the GroupAnnotationAccession or via the description of
 an annotation. When using the Description it's possible to use the SQL 
 'like'
}
