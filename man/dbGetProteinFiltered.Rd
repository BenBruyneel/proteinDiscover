% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteinDatabase.R
\name{dbGetProteinFiltered}
\alias{dbGetProteinFiltered}
\title{A bit more advanced version of \code{\link{dbGetProteinTable}} which allows
 for filtering (via SQL). Note that filtering raw columns (BLOB's) will
 not work properly}
\usage{
dbGetProteinFiltered(
  db,
  columnNames = NA,
  masterProtein = FALSE,
  sortOrder = NA,
  filtering = NA,
  SQL = FALSE
)
}
\arguments{
\item{db}{database access 'handle'}

\item{columnNames}{allows the selection of columns to take from the table,
default = NA (all columns)}

\item{masterProtein}{use the IsMasterProtein column to be zero,
default == TRUE. If more advanced filtering is needed, use db_getTable()
Note that if set to FALSE then no filtering is performed on the status of
the IsMasterProtein column}

\item{sortOrder}{allows for sorting of the selected columns,
default = NA, (no sorting). Other valid values are a single character
string ("ASC" or "DESC") or a character vector of the same length as the
columnNames vector containing a series of "ASC" or "DESC"}

\item{filtering}{SQL statement to be used for filtering of the query. The
IsMasterProtein column is already covered when masterProtein is set to TRUE}

\item{SQL}{allows the function to return the SQL query statement in stead of
a data.frame}
}
\value{
a data.frame containing requested data from the protein table or
 a character string specifying an SQL query
}
\description{
A bit more advanced version of \code{\link{dbGetProteinTable}} which allows
 for filtering (via SQL). Note that filtering raw columns (BLOB's) will
 not work properly
}
